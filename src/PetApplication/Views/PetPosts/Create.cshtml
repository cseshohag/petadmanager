@model PetApplication.Models.PetPost

@{
    ViewBag.Title = "Create";
}
<div class="container container-table">
    <div id="bannerImage" style="margin-left:20%;">
        <img src="~/Images/banner.jpg" />
    </div>

    @using (Html.BeginForm("Create", "PetPosts", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">
            <h4>PetPost</h4>
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.PetName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.PetID, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.PetID, ViewBag.PetList as SelectList, "--select--", new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PetName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PetPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PetPrice, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PetPrice, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PetDetails, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PetDetails, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PetDetails, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PetImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.PetImageUrl, new { htmlAttributes = new { @class = "form-control" } })*@
                    <input id="PetImageUrl" title="Upload a image" type="file" name="file" />
                    @*<input id="PetImageUrl" title="Upload a image" type="file" name="file" />*@
                    @Html.ValidationMessageFor(model => model.PetImageUrl, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PetLocation, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PetLocation, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PetLocation, "", new { @class = "text-danger" })
                </div>
            </div>

            @*<div class="form-group">
                    @Html.LabelFor(model => model.PostCreatedDate, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.PostCreatedDate, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.PostCreatedDate, "", new { @class = "text-danger" })
                    </div>
                </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.PetColor, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PetColor, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PetColor, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PostStatus, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PostStatus, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PostStatus, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Create" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

    <div class="btn-group btn-group-sm" role="group">
        @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
    </div>
    </div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
