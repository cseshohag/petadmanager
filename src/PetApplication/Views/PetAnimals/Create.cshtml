@model PetApplication.Models.PetAnimal

@{
    ViewBag.Title = "Create";
}

<div class="container container-table">
    <div id="bannerImage" style="margin-left:20%;">
        <img src="~/Images/banner.jpg" />
    </div>
    
    <div class="cart-table-area">
        <div class="container-fluid">
            <div class="row">
                <div class="col-12 col-lg-8">
                    <div class="checkout_details_area mt-50 clearfix">

                        <div class="cart-title">
                            <h2>Create</h2>
                            <hr />
                        </div>

                        @using (Html.BeginForm("Create", "PetAnimals", null, FormMethod.Post, new { enctype = "multipart/form-data" }))
                        {
                            @Html.AntiForgeryToken()
                            <div class="row">
                                
                                @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                                <div class="col-12 mb-3">
                                    @Html.LabelFor(model => model.ImageUrl, htmlAttributes: new { @class = "control-label col-md-2" })
                                    <input id="ImageUrl" title="Upload a image" type="file" name="file" placeholder="Image" />
                                    @Html.ValidationMessageFor(model => model.ImageUrl, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-12 mb-3">
                                    @Html.DropDownList("PetTypeID", null, htmlAttributes: new { @class = "w-100" })
                                    @Html.ValidationMessageFor(model => model.PetTypeID, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-12 mb-3">
                                    @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control", placeholder = "Pet Name" } })
                                    @Html.ValidationMessageFor(model => model.CreateBy, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-12 mb-3">
                                    @Html.EditorFor(model => model.Age, new { htmlAttributes = new { @class = "form-control", placeholder = "Age of months" } })
                                    @Html.ValidationMessageFor(model => model.Age, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-12 mb-3">
                                    @Html.EditorFor(model => model.Color, new { htmlAttributes = new { @class = "form-control", placeholder = "Pet color" } })
                                    @Html.ValidationMessageFor(model => model.Color, "", new { @class = "text-danger" })
                                </div>
                                
                                <div class="col-12 mb-3">
                                    @Html.EditorFor(model => model.Quantity, new { htmlAttributes = new { @class = "form-control", placeholder = "QTY" } })
                                    @Html.ValidationMessageFor(model => model.Quantity, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-12 mb-3">
                                    @Html.EditorFor(model => model.Price, new { htmlAttributes = new { @class = "form-control", placeholder = "Price" } })
                                    @Html.ValidationMessageFor(model => model.Price, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-12 mb-3">
                                    @Html.EditorFor(model => model.PhoneNumber, new { htmlAttributes = new { @class = "form-control", placeholder = "Phone" } })
                                    @Html.ValidationMessageFor(model => model.PhoneNumber, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-12 mb-3">
                                    @Html.EditorFor(model => model.Email, new { htmlAttributes = new { @class = "form-control", placeholder = "Email" } })
                                    @Html.ValidationMessageFor(model => model.Email, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4 mb-3">
                                    @Html.EditorFor(model => model.Area, new { htmlAttributes = new { @class = "form-control", placeholder = "Area" } })
                                    @Html.ValidationMessageFor(model => model.Area, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4 mb-3">
                                    @Html.EditorFor(model => model.City, new { htmlAttributes = new { @class = "form-control", placeholder = "City" } })
                                    @Html.ValidationMessageFor(model => model.City, "", new { @class = "text-danger" })
                                </div>
                                <div class="col-md-4 mb-3">
                                    @Html.EditorFor(model => model.Division, new { htmlAttributes = new { @class = "form-control", placeholder = "Division" } })
                                    @Html.ValidationMessageFor(model => model.Division, "", new { @class = "text-danger" })
                                </div>

                                <div class="col-12 mb-3">
                                    @Html.EditorFor(model => model.CreateBy, new { htmlAttributes = new { @class = "form-control", placeholder = "Created By" } })
                                    @Html.ValidationMessageFor(model => model.CreateBy, "", new { @class = "text-danger" })
                                </div>                                
                                <div class="col-12 mb-3">
                                    @Html.EditorFor(model => model.Details, new { htmlAttributes = new { @class = "form-control w-100", id = "comment", cols = "30", rows = "10", placeholder = "Details" } })
                                    @Html.ValidationMessageFor(model => model.Details, "", new { @class = "text-danger" })
                                </div>

                                <div class="form-group">
                                    <div class="col-md-offset-2 col-md-10">
                                        <div class="btn-group btn-group-sm" role="group">
                                            <input type="submit" value="Create" class="btn btn-success" />&nbsp;&nbsp;
                                            @Html.ActionLink("Back to List", "Index", null, new { @class = "btn btn-primary" })
                                        </div>
                                    </div>
                                </div>
                                
                            </div>
                        }
                    </div>
                </div>

            </div>
        </div>
    </div>

</div>
    @section Scripts {
        @Scripts.Render("~/bundles/jqueryval")
    }
